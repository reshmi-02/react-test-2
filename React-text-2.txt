1)What is React?

*It is a open source js library.
*It is a component based language and create packages using command.
*It is a single page application.
*I t is founded by Facebook in 2011 and later on insta in 2012 and released for public in 2013.


2)What are the advantages of using React?

*Fast Rendering.
*Effortless Maintenance.
*Create  Application easily.



3)What is JSX?

*JSX-Javascript Syntax Extension.
*It is used to create HTML element in Js.



4)What are keys in React?

*A “key” is a special string attribute you need to include when creating lists of elements in React.
*Keys are used in React to identify which items in the list are changed, updated, or deleted.
* Keys are used to give an identity to the elements in the lists.



5)What is react component?

*Components are independent and reusable bits of code.
*Components come in two types, Class components and Function components.
*A component encapsulates a DOM tree.


6)What is class and function component difference?

FUNCTION COMPONENT:
*A functional component is just a plain JavaScript pure function that accepts props as an argument and returns a React element(JSX).
*There is no render method used in functional components.
*Functional components run from top to bottom and once the function is returned it can’t be kept alive.
*Hooks can be easily used in functional components to make them Stateful.
Example:
const [name,SetName]= React.useState(' ')
*Constructors are not used.

CLASS COMPONENT:
*A class component requires you to extend from React. Component and create a render function that returns a React element.
*It must have the render() method returning JSX (which is syntactically similar to HTML)
*The class component is instantiated and different life cycle method is kept alive and is run and invoked depending on the phase of the class component.
*It requires different syntax inside a class component to implement hooks.

Example:

constructor(props) {
   super(props);
   this.state = {name: ' '}
}
*Constructor is used as it needs to store state. 



8)What is constructor?
*The constructor is a method used to initialize an object's state in a class.
* It automatically called during the creation of an object in a class.
*The constructor in a React component is called before the component is mounted.


9)What is super keyword?
*The super keyword is used to call the constructor of its parent class to access the parent's properties and methods.
*This is required when you need to access some variables from the parent class.


10)What is render function?
*React renders HTML to the web page by using a function called render().
*The purpose of the function is to display the specified HTML code inside the specified HTML element. 
*In the render() method, we can read props and state and return our JSX code to the root component of our app.


11)How to change of state value?
*To change a value in the state object, use the this. setState() method. When a value in the state object changes, the component will re-render, meaning that the output will change according to the new value(s).


12)What is uses of lifecycle methods?
*In React, components have a lifecycle that consists of different phases.
*Each phase has a set of lifecycle methods that are called at specific points in the component's lifecycle.
*These methods allow you to control the component's behavior and perform specific actions at different stages of its lifecycle.


13)List of lifecycle methods?
*Each component in React has a lifecycle which you can monitor and manipulate during its three main phases.
*The three phases are:
	 *Mounting,
	*Updating
	*Unmounting.
	

14)What is the use of UseEffect?
*The useEffect Hook allows you to perform side effects in your components.
*useEffect accepts two arguments. The second argument is optional.


15)What are props in React?
*In ReactJS, the props are a type of object where the value of attributes of a tag is stored.
*he word “props” implies “properties”, and its working functionality is quite similar to HTML attributes.
*Basically, these props components are read-only components.


16)What is prop drilling in React?
*Prop drilling occurs when a parent component generates its state and passes it down as props to its children components that do not consume the props – instead, they only pass it down to another component that finally consumes it


17)What is React Hooks?
*React Hooks are simple JavaScript functions that we can use to isolate the reusable part from a functional component.
*Hooks can be stateful and can manage side-effects.
*React provides a bunch of standard in-built hooks: useState : To manage states.
*Hooks were added to React in version 16.8. Hooks allow function components to have access to state and other React features.

18)What is React Hook list?
	useState
	 useEffect
	 useSelector
	 useDispatch
	 useReducer
	 useContext
	 useParams
	 useSearchparams


19)What are the different ways to style a React component?

*inline style:
	
		<h1 style={{color:"red"}}>Hi</h1>

*internal style:
	
		let col={
		  	  color:"red"
			}
		<h1 style={col}>Hi</h1>

*external style:
	
	import './Home.css'
		.size{
		       color:"red"
		     }
     	<h1 className>Hi</h1>



20. How do you handle events in React?

*In React, event handlers are written inside curly braces {} and are assigned to event attributes of React elements.
*The event attributes are named using camelCase, and the value of the event attribute is set to a function reference (not a function call) that handles the event.
*We can handle events by passing a function as a prop to an element like <button> . Event handlers must be passed, not called! onClick={handleClick} , not onClick={handleClick()} . We can define an event handler function separately or inline.


How can you update the state of a component?
Class Component :
 
	class Home extends React.Component{
		constructor(){
		  super()
		this.state={
			     name:"priyanka"	
			   }
		}
	const handle=()=>{
			this.setstate({name:"Abi"})
		}
	  render(){
		return(
			<div>
			   <h1>{this.state.name}</h1>
			   <button onClick={handle}>Click</button>
			</div>
		       )
   		  }
		}
	export default Home


Functional Component

	import {useState} from 'react'
	const Home =()=>{
		const [name.setName]=useState("Priyanka")
		
	  return(
                  <div>
                     <h1>{name}</h1>
		     <button onClick={()=>setName("Abi")}>
		  </div>
		)
	    }
	export default Home


22)What is React Router?
*React Router is a JavaScript framework that lets us handle client and server-side routing in React applications. 
*It enables the creation of single-page web or mobile apps that allow navigating without refreshing the page.
* It also allows us to use browser history features while preserving the right application view.


23. How to use of BrowserRouter?
	import Home from './Home.js'
	import {BrowserRouting,Routes,Route} from 'react-router-dom'
	const Routing =()=>{
		return(
			<BrowserRouter>
			<Routes>
			<Route path="/" elements={<Home/>} />
			</Routes>
			</BrowserRouter>
		     )
	}
	export default Routing


24. How to use of Routes & Links?

*<Link> is used to set the URL and keep track of browsing history. 
*Anytime we link to an internal path, we will use <Link> instead of <a href=""> . 
*The "layout route" is a shared component that inserts common content on all pages, such as a navigation menu.


25. What is use of useParams & useSearchParams?

*useParams, returns an object containing the current route's filled in dynamic parameters.
* useSearchParams, returns a read-only version of the URLSearchParams interface, which includes utility methods for reading the URL's query string.



26. What is React context? How to createContext?
*React Context is a method to pass props from parent to child component(s), by storing the props in a store(similar in Redux) and using these props from the store by child component(s) without actually passing them manually at each level of the component tree.

	import {createContext} from 'react'
	export const globalstate=createContext()

27. What is use of Provider & dispatch method?
*The <Provider> component makes the Redux store available to any nested components that need to access the Redux store. Since any React component in a React Redux app can be connected to the store, most applications will render a <Provider> at the top level, with the entire app's component tree inside of it.

*Dispatch Methods are the load balancing algorithms that determine how client requests are distributed between servers in a farm. AppDirector receives requests for service from clients and decides to which server to direct each request.



28. What is Read in Context values?
Contexts of reading are all the elements that influence how we read in different situations. The context includes:

			 1) the setting
			 2) the text 
			 3) the purpose for reading.



29. How we can pass props from Child to Parent?
Functional Component:
	
 parent.js

	import React from "react";
	import Child from "./Childcp";
	const Parent=()=>{
		let name="priyanka"
		let handler =()=>{
    				console.log(name);
			}
	return(
		<div>
            		<Child h={handler}/>
        	</div>
    )
}

export default Parent
}

child.js

	const Child =(props)=>{
    return(
        <div >
            <h1>{props.name}</h1>
            <button onClick={()=>props.h>click here</button>
        </div>
    )
}

export default Child




30. How we can pass props from Parent to Child?

	Functional Component:

  parent.js
	import Child from './Child.js'
	Const Parent =()=>{
		let x="priya"
	return(
		<div>
		    <Child name={x}/>
		</div>
	     )
        }
	export default Parent

  child.js
	const Child=(props)=>{
		return(
			<div>
			<h1>{props.name}</h1>
			</div>
		   )	
	}
	export default Child

